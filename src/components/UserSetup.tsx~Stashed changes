import React, { useEffect, useCallback, useState } from 'react';
import { styles } from '../styles';
import { User } from '../types';
import { parseReferralFromURL } from '../lib/referralSystem';
import { useResponsive } from '../hooks/useResponsive';
import { auth } from '../config/firebase';
import { GoogleAuthProvider, signInWithPopup } from 'firebase/auth';

// Check if Firebase is available
const isFirebaseAvailable = !!auth;

// Helper to decode JWT for user info (no signature verification needed on client)
function decodeJwt(token: string): any {
    try {
        const base64Url = token.split('.')[1];
        const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
        const jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {
            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
        }).join(''));
        return JSON.parse(jsonPayload);
    } catch (e) {
        console.error("Failed to decode JWT", e);
        return null;
    }
}

// Define google and aistudio on the window object for TypeScript
// FIX: Defined an AIStudio interface to resolve type conflicts and strongly type the aistudio object.
interface AIStudio {
    getAuthenticatedUser: () => Promise<User>;
}
declare global {
    interface Window {
        google: any;
        aistudio?: AIStudio;
    }
}

interface UserSetupProps {
    onStart: (user: User, selectedLevel?: 'junior' | 'mid' | 'senior' | 'staff') => void;
    isStarting: boolean;
}

const UserSetup: React.FC<UserSetupProps> = ({ onStart, isStarting }) => {
    const [authError, setAuthError] = useState<string | null>(null);
    const [tempUser, setTempUser] = useState<User | null>(null);
    const [selectedLevel, setSelectedLevel] = useState<'junior' | 'mid' | 'senior' | 'staff'>('junior');
    const { isMobile } = useResponsive();
    const isAiStudio = !!window.aistudio;
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞ –∏–∑ URL
    useEffect(() => {
        const refCode = parseReferralFromURL();
        if (refCode) {
            console.log('üìé –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –Ω–∞–π–¥–µ–Ω:', refCode);
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ gameState
            localStorage.setItem('pendingReferralCode', refCode);
        }
    }, []);
    

    // --- Firebase Auth Google Sign-In ---
    const handleFirebaseGoogleSignIn = useCallback(async () => {
        if (!isFirebaseAvailable) {
            setAuthError('Firebase –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.');
            return;
        }

        try {
            console.log('üîµ Starting Firebase Google Sign-In...');

            // Configure Google provider
            const provider = new GoogleAuthProvider();
            provider.setCustomParameters({
                prompt: 'select_account'
            });

            const result = await signInWithPopup(auth, provider);
            const user = result.user;

            console.log('üîµ Firebase auth successful:', user.email);

            const userObj: User = {
                name: user.displayName || `${user.email}`,
                email: user.email!,
                given_name: user.displayName?.split(' ')[0] || user.email!,
                family_name: user.displayName?.split(' ').slice(1).join(' ') || '',
                picture: user.photoURL || undefined,
            };

            console.log('üîµ Created user object from Firebase:', userObj);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            const { fetchGameState } = await import('../lib/api');
            const existingState = await fetchGameState(userObj.email);

            if (existingState && existingState.selectedDifficulty) {
                console.log('‚úÖ Found existing game state, skipping level selection');
                onStart(userObj);
            } else {
                console.log('üÜï New user, showing level selection');
                // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                setTempUser({
                    ...userObj,
                    name: userObj.name // –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –∏–º—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ
                });
            }
        } catch (error: any) {
            console.error('‚ùå Firebase Google Sign-In failed:', error);
            console.error('‚ùå Error code:', error.code);
            console.error('‚ùå Error message:', error.message);

            let errorMessage = '–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.';

            if (error.code === 'auth/popup-closed-by-user') {
                errorMessage = '–í—Ö–æ–¥ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.';
            } else if (error.code === 'auth/popup-blocked') {
                errorMessage = '–í—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ –±—Ä–∞—É–∑–µ—Ä–æ–º. –†–∞–∑—Ä–µ—à–∏—Ç–µ –≤—Å–ø–ª—ã–≤–∞—é—â–∏–µ –æ–∫–Ω–∞ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.';
            } else if (error.code === 'auth/cancelled-popup-request') {
                errorMessage = '–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—Ö–æ–¥ –±—ã–ª –æ—Ç–º–µ–Ω–µ–Ω.';
            } else if (error.code === 'auth/configuration-not-found') {
                errorMessage = 'Firebase –ø—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ:\n1. –°—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø—Ä–æ–µ–∫—Ç "course-ab-interview" –≤ Firebase Console\n2. –í–∫–ª—é—á–µ–Ω–∞ –ª–∏ Authentication –≤ –ø—Ä–æ–µ–∫—Ç–µ\n3. –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ª–∏ API –∫–ª—é—á–∏ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏';
            } else if (error.code === 'auth/operation-not-allowed') {
                errorMessage = 'Google Sign-In –Ω–µ –≤–∫–ª—é—á–µ–Ω –≤ Firebase Console. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ Firebase Console > Authentication > Sign-in method –∏ –≤–∫–ª—é—á–∏—Ç–µ Google.';
            } else if (error.code === 'auth/project-not-found') {
                errorMessage = 'Firebase –ø—Ä–æ–µ–∫—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–æ–µ–∫—Ç "course-ab-interview" –≤ Firebase Console –∏–ª–∏ –æ–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.';
            }

            setAuthError(errorMessage);
        }
    }, [onStart]);

    // --- AI Studio Logic ---
    const handleAiStudioLogin = async () => {
        try {
            const userInfo = await window.aistudio!.getAuthenticatedUser();
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            const { fetchGameState } = await import('../lib/api');
            const existingState = await fetchGameState(userInfo.email);
            
            if (existingState && existingState.selectedDifficulty) {
                // –ï—Å–ª–∏ –µ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ - —Å—Ä–∞–∑—É –∑–∞–ø—É—Å–∫–∞–µ–º –∏–≥—Ä—É
                console.log('‚úÖ Found existing game state, skipping level selection');
                onStart(userInfo);
            } else {
                // –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è
                console.log('üÜï New user, showing level selection');
                setTempUser(userInfo);
            }
        } catch(e) {
            console.error("AI Studio authentication failed:", e);
            setAuthError("–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ–π—Ç–∏ —á–µ—Ä–µ–∑ AI Studio. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.");
        }
    };
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è –∏ –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
    const handleStartWithLevel = () => {
        if (tempUser) {
            onStart(tempUser, selectedLevel);
        }
    };
    
    const renderContent = () => {
        if (isStarting) {
            return <p style={{textAlign: 'center', color: 'var(--text-secondary)'}}>–ó–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Å—Å–∏–∏...</p>;
        }

        if (authError) {
            return (
                <div style={{color: 'var(--error-color)', textAlign: 'center', padding: '1rem', backgroundColor: 'rgba(255, 82, 82, 0.1)', borderRadius: '8px', border: '1px solid var(--error-color)'}}>
                    <p style={{fontWeight: 'bold', marginBottom: '0.5rem'}}>–û—à–∏–±–∫–∞</p>
                    <p style={{fontSize: '0.9rem'}}>{authError}</p>
                </div>
            );
        }

        // –≠–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        if (tempUser) {
            return (
                <div style={{
                    width: '100%', 
                    maxWidth: isMobile ? '100%' : '450px', 
                    display: 'flex', 
                    flexDirection: 'column', 
                    gap: isMobile ? '1rem' : '1.5rem', 
                    alignItems: 'center',
                    padding: isMobile ? '0' : '0',
                    position: 'relative',
                    zIndex: 10, // –ü–æ–≤–µ—Ä—Ö Google –∫–Ω–æ–ø–∫–∏
                    backgroundColor: 'var(--surface-color)' // –ü–µ—Ä–µ–∫—Ä—ã–≤–∞–µ–º —Ñ–æ–Ω–æ–º
                }}>
                    <div style={{textAlign: 'center'}}>
                        <p style={{
                            fontSize: isMobile ? '1rem' : '1.1rem', 
                            marginBottom: '0.5rem', 
                            color: 'var(--text-primary)'
                        }}>
                            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, <strong>{tempUser.given_name}!</strong>
                        </p>
                        <p style={{
                            color: 'var(--text-secondary)', 
                            fontSize: isMobile ? '0.85rem' : '0.95rem',
                            marginBottom: '0.25rem'
                        }}>
                            –í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª–µ–≤—É—é –ø–æ–∑–∏—Ü–∏—é –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏
                        </p>
                        <p style={{
                            color: 'rgba(139, 92, 246, 0.8)', 
                            fontSize: isMobile ? '0.75rem' : '0.85rem',
                            fontStyle: 'italic'
                        }}>
                            –≠—Ç–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç—å –≤–æ–ø—Ä–æ—Å–æ–≤. –í–∞—à —É—Ä–æ–≤–µ–Ω—å –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞ –±—É–¥–µ—Ç —Ä–∞—Å—Ç–∏ –ø–æ –º–µ—Ä–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è.
                        </p>
                    </div>
                    
                    <div style={{
                        display: 'grid',
                        gridTemplateColumns: isMobile ? '1fr 1fr' : '1fr 1fr',
                        gap: isMobile ? '0.75rem' : '1rem',
                        width: '100%'
                    }}>
                        {[
                            { value: 'junior', icon: 'üå±', label: 'Junior', desc: '–ë–∞–∑–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã' },
                            { value: 'mid', icon: '‚≠ê', label: 'Middle', desc: '–°—Ä–µ–¥–Ω–∏–π —É—Ä–æ–≤–µ–Ω—å' },
                            { value: 'senior', icon: 'üíé', label: 'Senior', desc: '–°–ª–æ–∂–Ω—ã–µ –∫–µ–π—Å—ã' },
                            { value: 'staff', icon: 'üëë', label: 'Staff', desc: '–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–µ —Ç–µ–º—ã' }
                        ].map(level => (
                            <button
                                key={level.value}
                                onClick={() => setSelectedLevel(level.value as any)}
                                style={{
                                    padding: isMobile ? '0.75rem 0.5rem' : '1rem 0.75rem',
                                    borderRadius: isMobile ? '10px' : '12px',
                                    border: selectedLevel === level.value 
                                        ? '2px solid var(--primary-color)' 
                                        : '2px solid var(--border-color)',
                                    backgroundColor: selectedLevel === level.value 
                                        ? 'rgba(106, 90, 205, 0.1)' 
                                        : 'var(--bg-color)',
                                    cursor: 'pointer',
                                    transition: 'all 0.2s',
                                    display: 'flex',
                                    flexDirection: 'column',
                                    alignItems: 'center',
                                    gap: isMobile ? '0.25rem' : '0.4rem',
                                    minHeight: 'auto',
                                    height: isMobile ? 'auto' : '110px'
                                }}
                                onMouseOver={(e) => {
                                    if (selectedLevel !== level.value) {
                                        e.currentTarget.style.borderColor = 'var(--primary-color)';
                                    }
                                }}
                                onMouseOut={(e) => {
                                    if (selectedLevel !== level.value) {
                                        e.currentTarget.style.borderColor = 'var(--border-color)';
                                    }
                                }}
                            >
                                <div style={{fontSize: isMobile ? '1.5rem' : '2rem'}}>{level.icon}</div>
                                <div style={{
                                    fontWeight: 'bold', 
                                    fontSize: isMobile ? '0.9rem' : '1rem', 
                                    color: 'var(--text-primary)'
                                }}>{level.label}</div>
                                <div style={{
                                    fontSize: isMobile ? '0.7rem' : '0.8rem', 
                                    color: 'var(--text-secondary)',
                                    textAlign: 'center',
                                    lineHeight: '1.2'
                                }}>{level.desc}</div>
                            </button>
                        ))}
                    </div>
                    
                    <button 
                        onClick={handleStartWithLevel} 
                        style={{
                            ...styles.submitButton,
                            width: '100%',
                            maxWidth: isMobile ? '100%' : '300px',
                            fontSize: isMobile ? '0.95rem' : '1rem',
                            padding: isMobile ? '0.9rem 1.5rem' : '1rem 2rem'
                        }}
                    >
                        –ù–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É üöÄ
                    </button>
                </div>
            );
        }

        if (isAiStudio) {
            return (
                 <div style={{width: '100%', display: 'flex', flexDirection: 'column', gap: '1.5rem', alignItems: 'center'}}>
                     <p style={{textAlign: 'center', color: 'var(--text-secondary)'}}>
                        –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç AI Studio –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ—Å—Å–∞.
                    </p>
                    <button onClick={handleAiStudioLogin} style={styles.submitButton}>
                        –í–æ–π—Ç–∏
                    </button>
                </div>
            )
        }

        // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º Google –∫–Ω–æ–ø–∫—É –≤–æ–æ–±—â–µ
        if (tempUser) {
            return null; // –ù–∏—á–µ–≥–æ –Ω–µ —Ä–µ–Ω–¥–µ—Ä–∏–º, —Ç.–∫. —É–∂–µ –ø–æ–∫–∞–∑–∞–Ω —ç–∫—Ä–∞–Ω –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è –≤—ã—à–µ
        }

        return (
            <div style={{width: '100%', display: 'flex', flexDirection: 'column', gap: '1.5rem', alignItems: 'center'}}>
                 <p style={{textAlign: 'center', color: 'var(--text-secondary)'}}>
                    –í–æ–π–¥–∏—Ç–µ —Å –ø–æ–º–æ—â—å—é Google, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å. –í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω.
                </p>

                {isFirebaseAvailable && (
                    /* Firebase Google Sign-In button */
                    <button
                        onClick={handleFirebaseGoogleSignIn}
                        style={{
                            padding: '0.75rem 1.5rem',
                            backgroundColor: '#4285f4',
                            color: 'white',
                            border: 'none',
                            borderRadius: '4px',
                            cursor: 'pointer',
                            fontSize: '1rem',
                            fontWeight: '500',
                            display: 'flex',
                            alignItems: 'center',
                            gap: '0.5rem',
                            width: '100%',
                            maxWidth: '280px',
                            justifyContent: 'center'
                        }}
                    >
                        <svg width="18" height="18" viewBox="0 0 24 24">
                            <path fill="currentColor" d="M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z"/>
                            <path fill="currentColor" d="M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z"/>
                            <path fill="currentColor" d="M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z"/>
                            <path fill="currentColor" d="M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z"/>
                        </svg>
                        –í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Google
                    </button>
                )}

                {/* Development mode: always show Firebase testing tools */}
                {process.env.NODE_ENV === 'development' && (
                    <div style={{marginTop: '1rem', padding: '1rem', backgroundColor: 'rgba(255, 193, 7, 0.1)', borderRadius: '4px', border: '1px solid #ffc107'}}>
                        <p style={{fontSize: '0.9rem', color: '#856404', marginBottom: '0.5rem'}}>
                            üîß –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: —ç–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Firebase:
                        </p>
                        <div style={{display: 'flex', gap: '0.5rem', marginBottom: '0.5rem'}}>
                            <button
                                onClick={() => {
                                    const testUser: User = {
                                        name: 'Test User',
                                        email: 'test@example.com',
                                        given_name: 'Test',
                                        family_name: 'User',
                                        picture: undefined,
                                    };
                                    onStart(testUser);
                                }}
                                style={{
                                    padding: '0.5rem 1rem',
                                    backgroundColor: '#ffc107',
                                    color: '#000',
                                    border: 'none',
                                    borderRadius: '4px',
                                    cursor: 'pointer',
                                    fontSize: '0.9rem'
                                }}
                            >
                                –≠–∫—Å—Ç—Ä–µ–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø (—Ç–µ—Å—Ç)
                            </button>

                            <button
                                onClick={async () => {
                                    const { testFirebaseConnection, testFirebaseAuth, testFirebaseAPI } = await import('../config/firebase');
                                    console.log('üß™ Manual Firebase test started...');
                                    const apiOk = await testFirebaseAPI();
                                    const firestoreOk = await testFirebaseConnection();
                                    const authOk = await testFirebaseAuth();
                                    console.log('üß™ Test results:', { api: apiOk, firestore: firestoreOk, auth: authOk });
                                    alert(`Firebase test results:\nAPI: ${apiOk ? '‚úÖ' : '‚ùå'}\nFirestore: ${firestoreOk ? '‚úÖ' : '‚ùå'}\nAuth: ${authOk ? '‚úÖ' : '‚ùå'}\n\nCheck browser console for details.`);
                                }}
                                style={{
                                    padding: '0.5rem 1rem',
                                    backgroundColor: '#17a2b8',
                                    color: '#fff',
                                    border: 'none',
                                    borderRadius: '4px',
                                    cursor: 'pointer',
                                    fontSize: '0.9rem'
                                }}
                            >
                                üß™ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å Firebase
                            </button>

                            <button
                                onClick={() => {
                                    const currentConfig = prompt(
                                        '–¢–µ–∫—É—â–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:\n' +
                                        'Project ID: course-ab-interview\n' +
                                        'Auth Domain: course-ab-interview.firebaseapp.com\n\n' +
                                        '–ï—Å–ª–∏ —É –≤–∞—Å –¥—Ä—É–≥–æ–π –ø—Ä–æ–µ–∫—Ç, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π Project ID:',
                                        ''
                                    );

                                    if (currentConfig && currentConfig.trim()) {
                                        const newProjectId = currentConfig.trim();
                                        const { updateFirebaseConfig } = require('../config/firebase');
                                        updateFirebaseConfig({
                                            projectId: newProjectId,
                                            authDomain: `${newProjectId}.firebaseapp.com`,
                                            storageBucket: `${newProjectId}.firebasestorage.app`
                                        });
                                        alert(`‚úÖ Firebase config updated!\nProject ID: ${newProjectId}\n\nüîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É (F5) —á—Ç–æ–±—ã –ø—Ä–∏–º–µ–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è\n\n–ü–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞–∂–º–∏—Ç–µ "üß™ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å Firebase"`);
                                    }
                                }}
                                style={{
                                    padding: '0.5rem 1rem',
                                    backgroundColor: '#28a745',
                                    color: '#fff',
                                    border: 'none',
                                    borderRadius: '4px',
                                    cursor: 'pointer',
                                    fontSize: '0.9rem'
                                }}
                            >
                                ‚öôÔ∏è –û–±–Ω–æ–≤–∏—Ç—å Project ID
                            </button>
                        </div>

                        <details style={{marginTop: '0.5rem'}}>
                            <summary style={{cursor: 'pointer', fontSize: '0.8rem', color: '#856404'}}>
                                üìã –ß—Ç–æ –¥–µ–ª–∞—Ç—å –µ—Å–ª–∏ Firebase –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
                            </summary>
                            <div style={{marginTop: '0.5rem', fontSize: '0.8rem', lineHeight: '1.4'}}>
                                <strong>–ï—Å–ª–∏ —Ç–µ—Å—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç "CONFIGURATION_NOT_FOUND":</strong>
                                <ol>
                                    <li>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ <a href="https://console.firebase.google.com" target="_blank" style={{color: '#007bff'}}>Firebase Console</a></li>
                                    <li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É –≤–∞—Å –µ—Å—Ç—å –ø—Ä–æ–µ–∫—Ç —Å ID "course-ab-interview"</li>
                                    <li>–ï—Å–ª–∏ –ø—Ä–æ–µ–∫—Ç–∞ –Ω–µ—Ç - —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π —Å —Ç–∞–∫–∏–º –∏–º–µ–Ω–µ–º</li>
                                    <li>–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ <strong>"‚öôÔ∏è –û–±–Ω–æ–≤–∏—Ç—å Project ID"</strong> –∏ –≤–≤–µ–¥–∏—Ç–µ ID –≤–∞—à–µ–≥–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞</li>
                                </ol>
                                <strong>–ü–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞:</strong>
                                <ol start="5">
                                    <li>–í —Ä–∞–∑–¥–µ–ª–µ <strong>Authentication</strong> –Ω–∞–∂–º–∏—Ç–µ <strong>Get started</strong></li>
                                    <li>–ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ <strong>Sign-in method</strong> –∏ –≤–∫–ª—é—á–∏—Ç–µ <strong>Google</strong></li>
                                    <li>–í —Ä–∞–∑–¥–µ–ª–µ <strong>Firestore Database</strong> —Å–æ–∑–¥–∞–π—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö</li>
                                    <li>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∞–≤–∏–ª–∞ Firestore (–º–æ–∂–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏–∑ firestore.rules –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞)</li>
                                    <li>–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –Ω–∞–∂–º–∏—Ç–µ <strong>"üß™ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å Firebase"</strong></li>
                                </ol>
                            </div>
                        </details>
                    </div>
                )}

            </div>
        );
    };

    return (
        <div style={{
            ...styles.userSetup,
            maxWidth: isMobile ? '100%' : '550px',
            padding: isMobile ? '1.5rem 1rem' : '2rem',
            margin: isMobile ? '0' : 'auto'
        }} className="fade-in">
            <h1 style={{
                ...styles.title,
                fontSize: isMobile ? '1.8rem' : '2.5rem'
            }}>A/B Hero</h1>
            <p style={{
                ...styles.subtitle,
                fontSize: isMobile ? '0.9rem' : '1rem'
            }}>–¢–≤–æ–π –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π AI-—Ç—Ä–µ–Ω–∞–∂–µ—Ä –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –∫ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è–º</p>
            {renderContent()}
        </div>
    );
};

export default UserSetup;