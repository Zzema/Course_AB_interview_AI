/**
 * ============================================================================
 * TELEGRAM BOT FIREBASE FUNCTIONS
 * ============================================================================
 * 
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç Cloud Functions –¥–ª—è —Ä–∞–±–æ—Ç—ã Telegram –±–æ—Ç–∞
 * 
 * –§—É–Ω–∫—Ü–∏–∏:
 * 1. telegramWebhook - –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç Telegram
 * 2. sendDailyReminder - –æ—Ç–ø—Ä–∞–≤–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
 * 3. sendWeeklySummary - –æ—Ç–ø—Ä–∞–≤–∫–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
 */

import * as functions from 'firebase-functions';
import * as admin from 'firebase-admin';
import axios from 'axios';

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Admin SDK (—Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑)
if (!admin.apps.length) {
  admin.initializeApp();
}

const db = admin.firestore();

// Telegram Bot Token (–∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Firebase)
const TELEGRAM_BOT_TOKEN = '8464821667:AAHdoBF1OA0Qv2NALBjlxKXha3rqi5wq4nE';
const TELEGRAM_API_URL = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}`;

// ============================================================================
// HELPER FUNCTIONS
// ============================================================================

/**
 * –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ Telegram
 */
async function sendTelegramMessage(chatId: number, text: string, replyMarkup?: any) {
  try {
    await axios.post(`${TELEGRAM_API_URL}/sendMessage`, {
      chat_id: chatId,
      text: text,
      parse_mode: 'Markdown',
      reply_markup: replyMarkup
    });
    console.log(`‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ chat ${chatId}`);
  } catch (error) {
    console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:`, error);
  }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Firestore –ø–æ Telegram ID
 */
async function getUserByTelegramId(telegramId: number): Promise<any | null> {
  try {
    const snapshot = await db.collection('users')
      .where('telegramId', '==', telegramId)
      .limit(1)
      .get();
    
    if (snapshot.empty) {
      return null;
    }
    
    return { id: snapshot.docs[0].id, ...snapshot.docs[0].data() };
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    return null;
  }
}

/**
 * –°–≤—è–∑—ã–≤–∞–Ω–∏–µ Telegram –∞–∫–∫–∞—É–Ω—Ç–∞ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
 */
// eslint-disable-next-line @typescript-eslint/no-unused-vars
async function linkTelegramAccount(email: string, telegramId: number, chatId: number, username?: string) {
  try {
    const userRef = db.collection('users').doc(email);
    await userRef.update({
      telegramId: telegramId,
      telegramChatId: chatId,
      telegramUsername: username || '',
      telegramLinkedAt: admin.firestore.FieldValue.serverTimestamp()
    });
    console.log(`‚úÖ Telegram –∞–∫–∫–∞—É–Ω—Ç –ø—Ä–∏–≤—è–∑–∞–Ω: ${email} -> ${telegramId}`);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏–≤—è–∑–∫–∏ Telegram:', error);
    throw error;
  }
}

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
async function getUserStats(email: string): Promise<string> {
  try {
    const userDoc = await db.collection('users').doc(email).get();
    if (!userDoc.exists) {
      return '‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω';
    }
    
    const data = userDoc.data();
    const gameState = data?.gameState || {};
    
    const stats = [
      `üìä *–¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*`,
      ``,
      `‚≠ê *XP:* ${gameState.rating || 0}`,
      `üî• *–°–µ—Ä–∏—è:* ${gameState.activitySeries?.currentSeries || 0} –¥–Ω–µ–π`,
      `üìö *–í–æ–ø—Ä–æ—Å–æ–≤:* ${gameState.askedQuestionIds?.length || 0}`,
      `üéØ *–£—Ä–æ–≤–µ–Ω—å:* ${gameState.selectedDifficulty || 'junior'}`,
      ``,
      `–ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ! üí™`
    ].join('\n');
    
    return stats;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', error);
    return '‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏';
  }
}

// ============================================================================
// COMMAND HANDLERS
// ============================================================================

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
 */
async function handleStartCommand(chatId: number, userId: number, username?: string) {
  const welcomeMessage = [
    `üëã *–ü—Ä–∏–≤–µ—Ç!* –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ A/B Testing Interview Trainer!`,
    ``,
    `–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è–º –ø–æ A/B —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é.`,
    ``,
    `üìã *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*`,
    `/link - –°–≤—è–∑–∞—Ç—å —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º`,
    `/stats - –¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞`,
    `/challenge - –ß–µ–ª–ª–µ–Ω–¥–∂ –Ω–µ–¥–µ–ª–∏`,
    `/remind - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è`,
    `/friends - –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π`,
    `/help - –°–ø—Ä–∞–≤–∫–∞`,
    ``,
    `–ù–∞—á–Ω–∏ —Å –∫–æ–º–∞–Ω–¥—ã /link, —á—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å —ç—Ç–æ—Ç Telegram —Å —Ç–≤–æ–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º!`
  ].join('\n');
  
  await sendTelegramMessage(chatId, welcomeMessage);
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /link
 */
async function handleLinkCommand(chatId: number, userId: number, username?: string) {
  const linkMessage = [
    `üîó *–°–≤—è–∑—ã–≤–∞–Ω–∏–µ –∞–∫–∫–∞—É–Ω—Ç–∞*`,
    ``,
    `–ß—Ç–æ–±—ã —Å–≤—è–∑–∞—Ç—å Telegram —Å —Ç–≤–æ–∏–º –∞–∫–∫–∞—É–Ω—Ç–æ–º:`,
    ``,
    `1. –û—Ç–∫—Ä–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ: https://ab-test-interview-prep.web.app`,
    `2. –ó–∞–π–¥–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è`,
    `3. –ù–∞–∂–º–∏ "–°–≤—è–∑–∞—Ç—å —Å Telegram"`,
    `4. –í–≤–µ–¥–∏ —ç—Ç–æ—Ç –∫–æ–¥: \`${userId}\``,
    ``,
    `–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —è —Å–º–æ–≥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–±–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É! üìä`
  ].join('\n');
  
  await sendTelegramMessage(chatId, linkMessage);
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats
 */
async function handleStatsCommand(chatId: number, userId: number) {
  const user = await getUserByTelegramId(userId);
  
  if (!user) {
    await sendTelegramMessage(chatId, '‚ùå –ê–∫–∫–∞—É–Ω—Ç –Ω–µ —Å–≤—è–∑–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É–π /link –¥–ª—è —Å–≤—è–∑—ã–≤–∞–Ω–∏—è.');
    return;
  }
  
  const stats = await getUserStats(user.id);
  await sendTelegramMessage(chatId, stats);
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /challenge
 */
async function handleChallengeCommand(chatId: number, userId: number) {
  const user = await getUserByTelegramId(userId);
  
  if (!user) {
    await sendTelegramMessage(chatId, '‚ùå –ê–∫–∫–∞—É–Ω—Ç –Ω–µ —Å–≤—è–∑–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É–π /link –¥–ª—è —Å–≤—è–∑—ã–≤–∞–Ω–∏—è.');
    return;
  }
  
  // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π weekly challenge –∏–∑ weeklyChallenges.ts
  const challengeMessage = [
    `üèÜ *–ß–µ–ª–ª–µ–Ω–¥–∂ –Ω–µ–¥–µ–ª–∏*`,
    ``,
    `üìù –û—Ç–≤–µ—Ç—å –Ω–∞ 10 –≤–æ–ø—Ä–æ—Å–æ–≤ —Å–æ —Å—Ä–µ–¥–Ω–∏–º –±–∞–ª–ª–æ–º 7.5+`,
    ``,
    `‚è∞ –î–æ –∫–æ–Ω—Ü–∞ –Ω–µ–¥–µ–ª–∏ –æ—Å—Ç–∞–ª–æ—Å—å: 4 –¥–Ω—è`,
    `üìä –¢–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å: 6/10`,
    ``,
    `–ù–∞–≥—Ä–∞–¥–∞: +100 XP üéÅ`,
    ``,
    `–ü—Ä–æ–¥–æ–ª–∂–∞–π —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è! üí™`
  ].join('\n');
  
  await sendTelegramMessage(chatId, challengeMessage);
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /remind
 */
async function handleRemindCommand(chatId: number, userId: number) {
  const user = await getUserByTelegramId(userId);
  
  if (!user) {
    await sendTelegramMessage(chatId, '‚ùå –ê–∫–∫–∞—É–Ω—Ç –Ω–µ —Å–≤—è–∑–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É–π /link –¥–ª—è —Å–≤—è–∑—ã–≤–∞–Ω–∏—è.');
    return;
  }
  
  const keyboard = {
    inline_keyboard: [
      [
        { text: '‚úÖ –í–∫–ª—é—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ', callback_data: 'remind_daily_on' },
        { text: '‚ùå –í—ã–∫–ª—é—á–∏—Ç—å –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ', callback_data: 'remind_daily_off' }
      ],
      [
        { text: '‚úÖ –í–∫–ª—é—á–∏—Ç—å –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ', callback_data: 'remind_weekly_on' },
        { text: '‚ùå –í—ã–∫–ª—é—á–∏—Ç—å –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ', callback_data: 'remind_weekly_off' }
      ]
    ]
  };
  
  await sendTelegramMessage(chatId, '‚öôÔ∏è *–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π:*', keyboard);
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /friends
 */
async function handleFriendsCommand(chatId: number, userId: number) {
  const user = await getUserByTelegramId(userId);
  
  if (!user) {
    await sendTelegramMessage(chatId, '‚ùå –ê–∫–∫–∞—É–Ω—Ç –Ω–µ —Å–≤—è–∑–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É–π /link –¥–ª—è —Å–≤—è–∑—ã–≤–∞–Ω–∏—è.');
    return;
  }
  
  const gameState = user.gameState || {};
  const referralCode = gameState.referralCode || 'N/A';
  const referralsCount = gameState.referrals?.length || 0;
  
  const friendsMessage = [
    `üë• *–ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π!*`,
    ``,
    `üîó –¢–≤–æ—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:`,
    `https://ab-test-interview-prep.web.app?ref=${referralCode}`,
    ``,
    `üë´ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: ${referralsCount}`,
    ``,
    `üéÅ *–ù–∞–≥—Ä–∞–¥—ã:*`,
    `‚Ä¢ 1 –¥—Ä—É–≥ - 50 XP`,
    `‚Ä¢ 3 –¥—Ä—É–≥–∞ - –ü—Ä–æ–ø—É—Å–∫ –≤–æ–ø—Ä–æ—Å–∞`,
    `‚Ä¢ 5 –¥—Ä—É–∑–µ–π - 100 XP`,
    `‚Ä¢ 10 –¥—Ä—É–∑–µ–π - –ó–∞—â–∏—Ç–∞ —Å–µ—Ä–∏–∏`,
    ``,
    `–ü–æ–¥–µ–ª–∏—Å—å —Å—Å—ã–ª–∫–æ–π –∏ –ø–æ–ª—É—á–∞–π –±–æ–Ω—É—Å—ã! üöÄ`
  ].join('\n');
  
  await sendTelegramMessage(chatId, friendsMessage);
}

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
 */
async function handleHelpCommand(chatId: number) {
  const helpMessage = [
    `‚ùì *–°–ø—Ä–∞–≤–∫–∞*`,
    ``,
    `üìã *–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*`,
    `/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º`,
    `/link - –°–≤—è–∑–∞—Ç—å —Å –∞–∫–∫–∞—É–Ω—Ç–æ–º`,
    `/stats - –¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞`,
    `/challenge - –ß–µ–ª–ª–µ–Ω–¥–∂ –Ω–µ–¥–µ–ª–∏`,
    `/remind - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è`,
    `/friends - –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π`,
    `/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞`,
    ``,
    `üí¨ –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º: @support`
  ].join('\n');
  
  await sendTelegramMessage(chatId, helpMessage);
}

// ============================================================================
// CLOUD FUNCTIONS
// ============================================================================

/**
 * Webhook –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç Telegram
 */
export const telegramWebhook = functions.https.onRequest(async (req, res) => {
  try {
    const update = req.body;
    console.log('üì® –ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç Telegram:', JSON.stringify(update));
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    if (update.message) {
      const message = update.message;
      const chatId = message.chat.id;
      const userId = message.from.id;
      const username = message.from.username;
      const text = message.text || '';
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥
      if (text.startsWith('/')) {
        const command = text.split(' ')[0].toLowerCase();
        
        switch (command) {
          case '/start':
            await handleStartCommand(chatId, userId, username);
            break;
          case '/link':
            await handleLinkCommand(chatId, userId, username);
            break;
          case '/stats':
            await handleStatsCommand(chatId, userId);
            break;
          case '/challenge':
            await handleChallengeCommand(chatId, userId);
            break;
          case '/remind':
            await handleRemindCommand(chatId, userId);
            break;
          case '/friends':
            await handleFriendsCommand(chatId, userId);
            break;
          case '/help':
            await handleHelpCommand(chatId);
            break;
          default:
            await sendTelegramMessage(chatId, '‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π /help –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏.');
        }
      }
    }
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ callback –∫–Ω–æ–ø–æ–∫
    if (update.callback_query) {
      const callbackQuery = update.callback_query;
      const chatId = callbackQuery.message.chat.id;
      const data = callbackQuery.data;
      
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
      if (data.startsWith('remind_')) {
        // –ó–¥–µ—Å—å –æ–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ Firestore
        await sendTelegramMessage(chatId, '‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!');
      }
    }
    
    res.status(200).send('OK');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook:', error);
    res.status(500).send('Error');
  }
});

/**
 * Scheduled —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 19:00 –ú–°–ö
 */
export const sendDailyReminder = functions.pubsub
  .schedule('0 16 * * *') // 16:00 UTC = 19:00 MSK
  .timeZone('UTC')
  .onRun(async (context) => {
    console.log('üìÖ –û—Ç–ø—Ä–∞–≤–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π...');
    
    try {
      // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–º Telegram
      const usersSnapshot = await db.collection('users')
        .where('telegramChatId', '!=', null)
        .get();
      
      let sentCount = 0;
      
      for (const userDoc of usersSnapshot.docs) {
        const user = userDoc.data();
        const chatId = user.telegramChatId;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –∫–≤–µ—Å—Ç
        const todayCompleted = user.gameState?.activitySeries?.todayCompleted || false;
        
        if (!todayCompleted) {
          const reminderMessage = [
            `üîî *–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ!*`,
            ``,
            `–ù–µ –∑–∞–±—É–¥—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ! üìù`,
            ``,
            `‚è∞ –î–æ –∫–æ–Ω—Ü–∞ –¥–Ω—è –æ—Å—Ç–∞–ª–æ—Å—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —á–∞—Å–æ–≤`,
            `üî• –°–æ—Ö—Ä–∞–Ω–∏ —Å–≤–æ—é —Å–µ—Ä–∏—é: ${user.gameState?.activitySeries?.currentSeries || 0} –¥–Ω–µ–π`,
            ``,
            `–ù–∞—á–Ω–∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É: https://ab-test-interview-prep.web.app`
          ].join('\n');
          
          await sendTelegramMessage(chatId, reminderMessage);
          sentCount++;
        }
      }
      
      console.log(`‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π: ${sentCount}`);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π:', error);
    }
  });

/**
 * Scheduled —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
 * –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–∞–∂–¥–æ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ 20:00 –ú–°–ö
 */
export const sendWeeklySummary = functions.pubsub
  .schedule('0 17 * * 0') // 17:00 UTC –∫–∞–∂–¥–æ–µ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ = 20:00 MSK
  .timeZone('UTC')
  .onRun(async (context) => {
    console.log('üìä –û—Ç–ø—Ä–∞–≤–∫–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...');
    
    try {
      const usersSnapshot = await db.collection('users')
        .where('telegramChatId', '!=', null)
        .get();
      
      let sentCount = 0;
      
      for (const userDoc of usersSnapshot.docs) {
        const user = userDoc.data();
        const chatId = user.telegramChatId;
        const gameState = user.gameState || {};
        
        const summaryMessage = [
          `üìä *–ò—Ç–æ–≥–∏ –Ω–µ–¥–µ–ª–∏*`,
          ``,
          `‚≠ê XP –∑–∞—Ä–∞–±–æ—Ç–∞–Ω–æ: +${gameState.weeklyXP || 0}`,
          `üìö –í–æ–ø—Ä–æ—Å–æ–≤ —Ä–µ—à–µ–Ω–æ: ${gameState.weeklyQuestions || 0}`,
          `üî• –°–∞–º–∞—è –¥–ª–∏–Ω–Ω–∞—è —Å–µ—Ä–∏—è: ${gameState.activitySeries?.longestSeries || 0} –¥–Ω–µ–π`,
          `üèÜ –ú–µ—Å—Ç–æ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ: #${gameState.leaderboardRank || 'N/A'}`,
          ``,
          `üí™ –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ–¥–µ–ª–µ!`,
          ``,
          `üÜï –ù–æ–≤—ã–π —á–µ–ª–ª–µ–Ω–¥–∂ —É–∂–µ –¥–æ—Å—Ç—É–ø–µ–Ω!`
        ].join('\n');
        
        await sendTelegramMessage(chatId, summaryMessage);
        sentCount++;
      }
      
      console.log(`‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–≤–æ–¥–æ–∫: ${sentCount}`);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–≤–æ–¥–æ–∫:', error);
    }
  });

