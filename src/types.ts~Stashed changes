// FIX: Removed an incorrect import from './constants' that was causing a circular dependency.
// The types are defined below in this file and should not be imported from a file that depends on this one.

export interface LevelProgress {
    askedQuestionIds: number[]; // ID –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–∞ —ç—Ç–æ–º —É—Ä–æ–≤–Ω–µ
    totalQuestions: number; // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–∞ —É—Ä–æ–≤–Ω–µ
    averageScore: number; // –°—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª –Ω–∞ —ç—Ç–æ–º —É—Ä–æ–≤–Ω–µ
}

export interface QuestionAttempt {
    questionId: number; // ID –≤–æ–ø—Ä–æ—Å–∞
    timestamp: number; // –í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞ (Unix timestamp)
    answer: string; // –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    feedback: Feedback; // –ü–æ–ª–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –æ—Ç AI
    earnedXP: number; // –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –æ–ø—ã—Ç
    difficulty: DifficultyLevel; // –°–ª–æ–∂–Ω–æ—Å—Ç—å –≤–æ–ø—Ä–æ—Å–∞ (–Ω–∞ –º–æ–º–µ–Ω—Ç –æ—Ç–≤–µ—Ç–∞)
    seniority: SeniorityLevel; // –£—Ä–æ–≤–µ–Ω—å –≤–æ–ø—Ä–æ—Å–∞
}

export interface GameState {
    rating: number; // –û–ø—ã—Ç –∏–≥—Ä–æ–∫–∞ (–º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º)
    userName?: string; // –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –ª–∏–¥–µ—Ä–±–æ—Ä–¥–µ
    categoryScores: Record<string, { totalScore: number; count: number }>;
    keyPointScores: Record<string, { totalScore: number; count: number }>;
    consecutiveGoodAnswersOnSimpleQuestions: number;
    ratingHistory?: number[]; // –ò—Å—Ç–æ—Ä–∏—è –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω–æ–≥–æ –æ–ø—ã—Ç–∞ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
    initialLevel?: 'junior' | 'mid' | 'senior' | 'staff'; // –ù–∞—á–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ (—Ü–µ–ª–µ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è)
    selectedDifficulty?: 'all' | 'junior' | 'mid' | 'senior' | 'staff'; // –í—ã–±—Ä–∞–Ω–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –≤–æ–ø—Ä–æ—Å–æ–≤
    currentQuestionId?: number; // ID —Ç–µ–∫—É—â–µ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
    levelProgress?: Record<'junior' | 'mid' | 'senior' | 'staff', LevelProgress>; // –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –∫–∞–∂–¥–æ–º—É —É—Ä–æ–≤–Ω—é
    questionAttempts?: QuestionAttempt[]; // –ò—Å—Ç–æ—Ä–∏—è –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫ –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
    
    // –ù–û–í–´–ï –ü–û–õ–Ø –î–õ–Ø –°–ò–°–¢–ï–ú–´ –ï–ñ–ï–î–ù–ï–í–ù–´–• –ö–í–ï–°–¢–û–í –ò –°–ï–†–ò–ô –ê–ö–¢–ò–í–ù–û–°–¢–ò
    activitySeries?: ActivitySeries; // –î–∞–Ω–Ω—ã–µ –æ —Å–µ—Ä–∏–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    inventory?: Inventory; // –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏ (–ø—Ä–æ–ø—É—Å–∫–∏, –∑–∞—â–∏—Ç—ã –∏ —Ç.–¥.)
    completedDailyQuests?: string[]; // –ò—Å—Ç–æ—Ä–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∫–≤–µ—Å—Ç–æ–≤ (–¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏)
    
    // LEARNING PATH (–°–¢–†–£–ö–¢–£–†–ò–†–û–í–ê–ù–ù–û–ï –û–ë–£–ß–ï–ù–ò–ï)
    learningProgress?: UserLearningProgress; // –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –º–æ–¥—É–ª—è–º
    
    // –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê
    referralCode?: string; // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    referredBy?: string; // –ö—Ç–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª (referralCode –ø—Ä–∏–≥–ª–∞—à–∞—é—â–µ–≥–æ)
    referrals?: string[]; // –°–ø–∏—Å–æ–∫ referralCode –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    referralRewards?: {
      count: number; // –°–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –ø—Ä–∏–≥–ª–∞—Å–∏–ª
      xpEarned: number; // –°–∫–æ–ª—å–∫–æ XP –ø–æ–ª—É—á–∏–ª –∑–∞ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
      itemsEarned: { type: string; value: number }[]; // –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã
    };
}

export interface User {
    name: string; // Full name from Google
    email: string;
    given_name: string;
    family_name: string;
    picture?: string;
}

export interface Session {
    user: User;
    gameState: GameState;
}

export interface Feedback {
    overallScore: number;
    evaluation: {
        strengths: string[];
        weaknesses: string[];
    };
    categoryBreakdown: { category: string; score: number; comment: string }[];
}


// ============================================================================
// –ù–û–í–´–ï –¢–ò–ü–´ –î–õ–Ø –ë–ê–ó–´ –í–û–ü–†–û–°–û–í
// ============================================================================

export interface Question {
  id: number;
  difficulty: DifficultyLevel;
  seniority: SeniorityLevel;
  text: string;
  bigTech: BigTechCompany[];
  keyPoints?: KeyPoint[];
  modules: string[]; // ['1.1', '2.3'] - PRIMARY: —Å–≤—è–∑—å —Å Learning Path –º–æ–¥—É–ª—è–º–∏
  referenceAnswer?: string; // –≠—Ç–∞–ª–æ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–ª—è –æ–±—É—á–∞—é—â–µ–≥–æ —Ä–µ–∂–∏–º–∞ (–≤ –º–æ–¥—É–ª—è—Ö)
  // categories –≤—ã—á–∏—Å–ª—è—é—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ —á–µ—Ä–µ–∑ getCategoriesFromModules()
}

export type DifficultyLevel = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10;

export type SeniorityLevel = 'junior' | 'mid' | 'senior' | 'staff';

export type Category = 
  | 'foundations'
  | 'statistics'
  | 'design'
  | 'metrics'
  | 'analysis'
  | 'interpretation'
  | 'pitfalls'
  | 'cases'
  | 'advanced_methods'
  | 'infrastructure'
  | 'leadership';

export type BigTechCompany = 'Meta' | 'Google' | 'Amazon' | 'Microsoft' | 'Netflix' | 'All';

export type KeyPoint = 
  | 'type-i-error'
  | 'type-ii-error'
  | 'statistical-power'
  | 'statistical-significance'
  | 'multiple-testing'
  | 'sample-size'
  | 'randomization'
  | 'experiment-duration'
  | 'experiment-types'
  | 'statistical-tests'
  | 'advanced-methods'
  | 'distribution-issues'
  | 'segmentation'
  | 'metric-types'
  | 'metric-issues'
  | 'business-metrics'
  | 'peeking-problem'
  | 'novelty-effects'
  | 'network-effects'
  | 'practical-significance'
  | 'causal-inference';

// ============================================================================
// –¢–ò–ü–´ –î–õ–Ø –°–ò–°–¢–ï–ú–´ –ö–í–ï–°–¢–û–í –ò –ï–ñ–ï–î–ù–ï–í–ù–û–ô –ê–ö–¢–ò–í–ù–û–°–¢–ò
// ============================================================================

/**
 * –ö–≤–µ—Å—Ç - –∑–∞–¥–∞–Ω–∏–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –∫–≤–µ—Å—Ç–æ–≤: –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ, –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω—ã–µ, –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è
 */
export interface Quest {
  id: string; // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –∫–≤–µ—Å—Ç–∞
  title: string; // –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∫–≤–µ—Å—Ç–∞
  description: string; // –û–ø–∏—Å–∞–Ω–∏–µ –∫–≤–µ—Å—Ç–∞
  progress: { current: number; total: number }; // –ü—Ä–æ–≥—Ä–µ—Å—Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
  reward: number; // –û—Å–Ω–æ–≤–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞ –≤ XP
  completed: boolean; // –í—ã–ø–æ–ª–Ω–µ–Ω –ª–∏ –∫–≤–µ—Å—Ç
  urgent?: boolean; // –°—Ä–æ—á–Ω—ã–π –∫–≤–µ—Å—Ç (–∫—Ä–∞—Å–Ω–∞—è –ø–æ–¥—Å–≤–µ—Ç–∫–∞)
  
  // –ù–û–í–´–ï –ü–û–õ–Ø:
  type: 'daily' | 'weekly' | 'milestone' | 'achievement'; // –¢–∏–ø –∫–≤–µ—Å—Ç–∞
  expiresAt?: number; // Unix timestamp –∏—Å—Ç–µ—á–µ–Ω–∏—è (–¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∫–≤–µ—Å—Ç–æ–≤)
  rewards?: QuestReward[]; // –î–µ—Ç–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã (XP + –ø—Ä–µ–¥–º–µ—Ç—ã)
}

/**
 * –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –∫–≤–µ—Å—Ç
 * –ú–æ–∂–µ—Ç –±—ã—Ç—å XP –∏–ª–∏ –ø—Ä–µ–¥–º–µ—Ç –∏–∑ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
 */
export interface QuestReward {
  type: 'xp' | 'item'; // –¢–∏–ø –Ω–∞–≥—Ä–∞–¥—ã
  value: number; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ (XP –∏–ª–∏ –ø—Ä–µ–¥–º–µ—Ç–æ–≤)
  itemType?: 'question_skip' | 'series_protection'; // –¢–∏–ø –ø—Ä–µ–¥–º–µ—Ç–∞
  description: string; // –û–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–≥—Ä–∞–¥—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
}

/**
 * –°–∏—Å—Ç–µ–º–∞ —Å–µ—Ä–∏–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ (–∑–∞–º–µ–Ω–∞ "—Å—Ç—Ä–∏–∫")
 * –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export interface ActivitySeries {
  currentSeries: number; // –¢–µ–∫—É—â–∞—è —Å–µ—Ä–∏—è –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥
  longestSeries: number; // –†–µ–∫–æ—Ä–¥–Ω–∞—è —Å–µ—Ä–∏—è –¥–Ω–µ–π
  lastActiveDate: string; // YYYY-MM-DD –ø–æ—Å–ª–µ–¥–Ω–µ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  todayCompleted: boolean; // –í—ã–ø–æ–ª–Ω–µ–Ω –ª–∏ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–π –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –∫–≤–µ—Å—Ç
  seriesMilestones: SeriesMilestone[]; // –ù–∞–≥—Ä–∞–¥—ã –∑–∞ milestone'—ã —Å–µ—Ä–∏–∏
}

/**
 * Milestone —Å–µ—Ä–∏–∏ - –Ω–∞–≥—Ä–∞–¥–∞ –∑–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –ø–æ–¥—Ä—è–¥
 */
export interface SeriesMilestone {
  days: number; // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è (3, 7, 14, 30)
  reward: QuestReward; // –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ
  unlocked: boolean; // –î–æ—Å—Ç–∏–≥–Ω—É—Ç –ª–∏ milestone
  claimed: boolean; // –ü–æ–ª—É—á–µ–Ω–∞ –ª–∏ –Ω–∞–≥—Ä–∞–¥–∞ (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–ª–∏–∫–Ω—É–ª "–ó–∞–±—Ä–∞—Ç—å")
}

/**
 * –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * –•—Ä–∞–Ω–∏—Ç –ø—Ä–µ–¥–º–µ—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å
 */
export interface Inventory {
  questionSkips: number; // "üé≤ –ü—Ä–æ–ø—É—Å–∫ –≤–æ–ø—Ä–æ—Å–∞" - –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å
  seriesProtection: number; // "üõ°Ô∏è –ó–∞—â–∏—Ç–∞ —Å–µ—Ä–∏–∏" - –∑–∞—â–∏—â–∞–µ—Ç –æ—Ç –ø–æ—Ç–µ—Ä–∏ —Å–µ—Ä–∏–∏ –Ω–∞ 1 –¥–µ–Ω—å
}

// ============================================================================
// –¢–ò–ü–´ –î–õ–Ø LEARNING PATH (–°–¢–†–£–ö–¢–£–†–ò–†–û–í–ê–ù–ù–û–ï –û–ë–£–ß–ï–ù–ò–ï)
// ============================================================================

/**
 * –ú–æ–¥—É–ª—å –æ–±—É—á–µ–Ω–∏—è - –≥—Ä—É–ø–ø–∞ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ –æ–¥–Ω–æ–π —Ç–µ–º–µ
 */
export interface LearningModule {
  id: string; // '1.1', '2.3' etc
  level: 1 | 2 | 3; // Foundation / Practitioner / Expert
  category: Category; // –î–æ–º–∏–Ω–∏—Ä—É—é—â–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è –º–æ–¥—É–ª—è
  title: string;
  description: string;
  theoryContent: string; // Markdown —Ç–µ–æ—Ä–∏—è
  questionIds: number[]; // –í–æ–ø—Ä–æ—Å—ã –º–æ–¥—É–ª—è
  checkpointCriteria: {
    minAvgScore: number; // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è
    minQuestionsCompleted: number; // –ú–∏–Ω–∏–º—É–º –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è
  };
  unlockRequirements?: string[]; // –ú–æ–¥—É–ª–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
}

/**
 * Checkpoint - —ç–∫–∑–∞–º–µ–Ω –ø–æ—Å–ª–µ –º–æ–¥—É–ª—è –∏–ª–∏ —É—Ä–æ–≤–Ω—è
 */
export interface Checkpoint {
  id: string; // 'checkpoint-1.1', 'checkpoint-level-1'
  type: 'module' | 'level';
  moduleId?: string; // –î–ª—è module checkpoint
  levelId?: number; // –î–ª—è level checkpoint
  questionIds: number[]; // –í–æ–ø—Ä–æ—Å—ã —ç–∫–∑–∞–º–µ–Ω–∞
  minScore: number; // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ –¥–ª—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è
  reward: {
    badge: string; // ID badge
    badgeTitle: string; // –ù–∞–∑–≤–∞–Ω–∏–µ badge
    certificate: boolean; // –í—ã–¥–∞–≤–∞—Ç—å –ª–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç
    xp: number; // –ë–æ–Ω—É—Å–Ω—ã–π XP
  };
}

/**
 * –£—Ä–æ–≤–µ–Ω—å –æ–±—É—á–µ–Ω–∏—è (Foundation/Practitioner/Expert)
 */
export interface LearningLevel {
  id: 1 | 2 | 3;
  title: string;
  description: string;
  modules: LearningModule[];
  finalCheckpoint: Checkpoint;
}

/**
 * –í–µ—Å—å Learning Path
 */
export interface LearningPath {
  levels: LearningLevel[];
}

/**
 * –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –æ–¥–Ω–æ–º—É –º–æ–¥—É–ª—é
 */
export interface ModuleProgress {
  moduleId: string;
  startedAt: number; // timestamp
  completedAt?: number; // timestamp
  answeredQuestionIds: number[]; // –û—Ç–≤–µ—á–µ–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã
  questionScores: Record<number, number>; // questionId -> –ø–æ—Å–ª–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞
  avgScore: number; // –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ –ø–æ –º–æ–¥—É–ª—é
  checkpointCompleted: boolean; // –ü—Ä–æ–π–¥–µ–Ω –ª–∏ checkpoint –º–æ–¥—É–ª—è
}

/**
 * –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –≤—Å–µ–º—É Learning Path
 */
export interface UserLearningProgress {
  currentLevel: 1 | 2 | 3; // –¢–µ–∫—É—â–∏–π —É—Ä–æ–≤–µ–Ω—å
  currentModuleId: string; // –¢–µ–∫—É—â–∏–π –º–æ–¥—É–ª—å (–ø–æ—Å–ª–µ–¥–Ω–∏–π –∞–∫—Ç–∏–≤–Ω—ã–π)
  completedModuleIds: string[]; // –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –º–æ–¥—É–ª–∏
  completedCheckpointIds: string[]; // –ü—Ä–æ–π–¥–µ–Ω–Ω—ã–µ checkpoints
  moduleProgress: Record<string, ModuleProgress>; // –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –∫–∞–∂–¥–æ–º—É –º–æ–¥—É–ª—é
  earnedBadges: string[]; // –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ badges
}
