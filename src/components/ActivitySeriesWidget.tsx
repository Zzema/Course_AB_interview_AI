/**
 * ============================================================================
 * ACTIVITY SERIES WIDGET
 * ============================================================================
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Å–µ—Ä–∏–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * 
 * –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:
 * - –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π —Å–µ—Ä–∏–∏ –¥–Ω–µ–π
 * - –ö–∞–ª–µ–Ω–¥–∞—Ä—å –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 7 –¥–Ω–µ–π (–≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏)
 * - –ü—Ä–æ–≥—Ä–µ—Å—Å –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ milestone
 * - –†–µ–∫–æ—Ä–¥ —Å–µ—Ä–∏–∏
 * - –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ä–µ–∂–∏–º –¥–ª—è —à–∞–ø–∫–∏
 */

import React from 'react';
import { ActivitySeries } from '../types';
import { getNextMilestone, getCurrentDateString, getDaysBetween } from '../lib/activitySeriesManager';

interface ActivitySeriesWidgetProps {
  series: ActivitySeries;
  compact?: boolean; // –ö–æ–º–ø–∞–∫—Ç–Ω—ã–π —Ä–µ–∂–∏–º –¥–ª—è —à–∞–ø–∫–∏ GameScreen
}

const ActivitySeriesWidget: React.FC<ActivitySeriesWidgetProps> = ({ series, compact = false }) => {
  const nextMilestone = getNextMilestone(series);
  const currentDate = getCurrentDateString();
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫–∞–ª–µ–Ω–¥–∞—Ä—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 7 –¥–Ω–µ–π
  const generateLast7Days = () => {
    const days = [];
    const today = new Date(currentDate + 'T00:00:00');
    
    for (let i = 6; i >= 0; i--) {
      const date = new Date(today);
      date.setDate(date.getDate() - i);
      const dateString = date.toISOString().split('T')[0];
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª –ª–∏ —ç—Ç–æ—Ç –¥–µ–Ω—å –≤ —Å–µ—Ä–∏–∏
      const daysDiff = getDaysBetween(dateString, series.lastActiveDate);
      const isActive = daysDiff <= series.currentSeries && 
                      (dateString <= series.lastActiveDate);
      
      days.push({
        date: dateString,
        isActive,
        isToday: dateString === currentDate
      });
    }
    
    return days;
  };
  
  const last7Days = generateLast7Days();
  
  // ========================================
  // –ö–û–ú–ü–ê–ö–¢–ù–´–ô –†–ï–ñ–ò–ú (–¥–ª—è —à–∞–ø–∫–∏)
  // ========================================
  if (compact) {
    return (
      <div style={{
        display: 'flex',
        alignItems: 'center',
        gap: '0.5rem',
        background: 'rgba(255, 107, 36, 0.15)',
        border: '1px solid rgba(255, 107, 36, 0.3)',
        borderRadius: '8px',
        padding: '0.5rem 0.75rem'
      }}>
        <span style={{ fontSize: '1.2rem' }}>üî•</span>
        <div style={{
          display: 'flex',
          flexDirection: 'column',
          gap: '0.1rem'
        }}>
          <span style={{
            fontSize: '0.85rem',
            fontWeight: 700,
            color: '#FF6B24'
          }}>
            {series.currentSeries} {series.currentSeries === 1 ? '–¥–µ–Ω—å' : '–¥–Ω–µ–π'}
          </span>
          {nextMilestone && (
            <span style={{
              fontSize: '0.65rem',
              color: 'rgba(255, 255, 255, 0.6)'
            }}>
              –¥–æ {nextMilestone.days}: {nextMilestone.days - series.currentSeries}
            </span>
          )}
        </div>
      </div>
    );
  }
  
  // ========================================
  // –ü–û–õ–ù–´–ô –†–ï–ñ–ò–ú (–¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏)
  // ========================================
  return (
    <div style={{
      background: 'rgba(255, 255, 255, 0.05)',
      border: '1px solid rgba(255, 255, 255, 0.1)',
      borderRadius: '16px',
      padding: '1.5rem',
      marginBottom: '2rem'
    }}>
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div style={{
        display: 'flex',
        justifyContent: 'space-between',
        alignItems: 'center',
        marginBottom: '1rem'
      }}>
        <h3 style={{
          fontSize: '1.25rem',
          fontWeight: 700,
          margin: 0,
          display: 'flex',
          alignItems: 'center',
          gap: '0.5rem'
        }}>
          üî• –°–µ—Ä–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        </h3>
        <div style={{
          fontSize: '0.85rem',
          color: 'rgba(255, 255, 255, 0.6)'
        }}>
          –†–µ–∫–æ—Ä–¥: {series.longestSeries} {series.longestSeries === 1 ? '–¥–µ–Ω—å' : '–¥–Ω–µ–π'}
        </div>
      </div>
      
      {/* –¢–µ–∫—É—â–∞—è —Å–µ—Ä–∏—è */}
      <div style={{
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        gap: '1rem',
        marginBottom: '1.5rem'
      }}>
        <div style={{
          fontSize: '3rem',
          filter: 'drop-shadow(0 0 10px rgba(255, 107, 36, 0.5))'
        }}>
          üî•
        </div>
        <div style={{
          display: 'flex',
          flexDirection: 'column',
          alignItems: 'flex-start'
        }}>
          <div style={{
            fontSize: '2.5rem',
            fontWeight: 800,
            lineHeight: 1,
            background: 'linear-gradient(135deg, #FF6B24 0%, #FF9A56 100%)',
            WebkitBackgroundClip: 'text',
            WebkitTextFillColor: 'transparent'
          }}>
            {series.currentSeries}
          </div>
          <div style={{
            fontSize: '0.9rem',
            color: 'rgba(255, 255, 255, 0.7)',
            marginTop: '0.25rem'
          }}>
            {series.currentSeries === 1 ? '–¥–µ–Ω—å –ø–æ–¥—Ä—è–¥' : '–¥–Ω–µ–π –ø–æ–¥—Ä—è–¥'}
          </div>
        </div>
      </div>
      
      {/* –ö–∞–ª–µ–Ω–¥–∞—Ä—å –ø–æ—Å–ª–µ–¥–Ω–∏—Ö 7 –¥–Ω–µ–π */}
      <div style={{
        marginBottom: '1.5rem'
      }}>
        <div style={{
          fontSize: '0.75rem',
          color: 'rgba(255, 255, 255, 0.5)',
          marginBottom: '0.5rem',
          textAlign: 'center'
        }}>
          –ü–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
        </div>
        <div style={{
          display: 'flex',
          justifyContent: 'center',
          gap: '0.5rem'
        }}>
          {last7Days.map((day, idx) => (
            <div
              key={idx}
              style={{
                width: '40px',
                height: '40px',
                borderRadius: '8px',
                background: day.isActive 
                  ? 'linear-gradient(135deg, #FF6B24 0%, #FF9A56 100%)'
                  : 'rgba(255, 255, 255, 0.1)',
                border: day.isToday 
                  ? '2px solid rgba(255, 255, 255, 0.5)'
                  : '1px solid rgba(255, 255, 255, 0.1)',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                fontSize: '1.2rem',
                transition: 'all 0.2s'
              }}
              title={day.date}
            >
              {day.isActive && 'üî•'}
            </div>
          ))}
        </div>
      </div>
      
      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ milestone */}
      {nextMilestone && (
        <div>
          <div style={{
            display: 'flex',
            justifyContent: 'space-between',
            alignItems: 'center',
            marginBottom: '0.5rem'
          }}>
            <span style={{
              fontSize: '0.85rem',
              color: 'rgba(255, 255, 255, 0.7)'
            }}>
              –î–æ —Å–ª–µ–¥—É—é—â–µ–π –Ω–∞–≥—Ä–∞–¥—ã
            </span>
            <span style={{
              fontSize: '0.85rem',
              fontWeight: 600,
              color: '#FF6B24'
            }}>
              {series.currentSeries}/{nextMilestone.days} –¥–Ω–µ–π
            </span>
          </div>
          
          {/* –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä */}
          <div style={{
            height: '8px',
            background: 'rgba(0, 0, 0, 0.3)',
            borderRadius: '4px',
            overflow: 'hidden'
          }}>
            <div style={{
              height: '100%',
              width: `${(series.currentSeries / nextMilestone.days) * 100}%`,
              background: 'linear-gradient(90deg, #FF6B24 0%, #FF9A56 100%)',
              borderRadius: '4px',
              transition: 'width 0.5s ease-out'
            }} />
          </div>
          
          {/* –ù–∞–≥—Ä–∞–¥–∞ */}
          <div style={{
            marginTop: '1rem',
            padding: '0.75rem',
            background: 'rgba(139, 92, 246, 0.1)',
            border: '1px solid rgba(139, 92, 246, 0.3)',
            borderRadius: '8px',
            display: 'flex',
            alignItems: 'center',
            justifyContent: 'space-between'
          }}>
            <span style={{
              fontSize: '0.85rem',
              color: 'rgba(255, 255, 255, 0.8)'
            }}>
              üéÅ –ù–∞–≥—Ä–∞–¥–∞ –∑–∞ {nextMilestone.days} –¥–Ω–µ–π:
            </span>
            <span style={{
              fontSize: '0.85rem',
              fontWeight: 600,
              color: '#c4b5fd'
            }}>
              {nextMilestone.reward.description}
            </span>
          </div>
        </div>
      )}
      
      {/* –í—Å–µ milestone'—ã –¥–æ—Å—Ç–∏–≥–Ω—É—Ç—ã */}
      {!nextMilestone && series.currentSeries >= 30 && (
        <div style={{
          padding: '1rem',
          background: 'linear-gradient(135deg, #10b981 0%, #06b6d4 100%)',
          borderRadius: '8px',
          textAlign: 'center'
        }}>
          <div style={{
            fontSize: '1.5rem',
            marginBottom: '0.5rem'
          }}>
            üèÜ
          </div>
          <div style={{
            fontSize: '1rem',
            fontWeight: 600,
            color: 'white'
          }}>
            –í—Å–µ –Ω–∞–≥—Ä–∞–¥—ã –ø–æ–ª—É—á–µ–Ω—ã!
          </div>
          <div style={{
            fontSize: '0.85rem',
            color: 'rgba(255, 255, 255, 0.9)',
            marginTop: '0.25rem'
          }}>
            –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ! üí™
          </div>
        </div>
      )}
    </div>
  );
};

export default ActivitySeriesWidget;

